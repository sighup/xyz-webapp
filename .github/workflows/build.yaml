name: build-and-publish

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write

    strategy:
      matrix:
        include:
          - project: xyz-webapp


    steps:
      - name: Cancel Previous Workflows In Progress
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.project }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    outputs:
      version: ${{ steps.meta.outputs.version }}
      tags: ${{ steps.step2.outputs.tags }}

  helm-release-version:
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')  
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project: xyz-webapp
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Chart | Release Version
        run: |
          tag="${GITHUB_REF_NAME}"
          VERSION="${tag#v}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          sed -i 's/^version:.*$/version: $VERSION/;s/^appVersion:.*$/appVersion: $GITHUB_REF_NAME/' deploy/helm/${{ matrix.project }}/Chart.yaml
          helm inspect chart deploy/helm/${{ matrix.project }} | grep ^version | cut -d' ' -f2
          helm inspect chart deploy/helm/${{ matrix.project }} | grep ^appVersion | cut -d' ' -f2
        id: chart_release_version
        
      - name: Chart | Push Release Version
        uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: xyz-webapp
          repository: sighup/charts
          tag: ${{ steps.chart_release_version.outputs.VERSION }}
          path: deploy/helm/${{ matrix.project }}
          registry: ghcr.io
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}

  helm-branch-version:
    if: github.ref_type == 'branch'
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project: xyz-webapp
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
  
      - name: Chart | Version

        run: |        
          echo "::set-output name=VERSION::$(helm inspect chart deploy/helm/${{ matrix.project }} | grep ^version | cut -d' ' -f2)"
        id: chart_version
      
      - name: Chart | Push Release Version
        uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: xyz-webapp
          repository: sighup/charts
          tag: ${{ steps.chart_version.outputs.VERSION }}
          path: deploy/helm/${{ matrix.project }}
          registry: ghcr.io
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
